lt.split.act.plot$set(title = "Activity breakdown based on time of lesson")
lt.split.act.plot$yAxis(tickFormat = "#!d3.format('%')!#")
lt.split.act.plot$print('iframe21',include_assets = TRUE)
lt.split.act.plot
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
# Overall activity breakdown
suppressPackageStartupMessages(library(rCharts))
rd1 <- data.frame(Activity = names(wtd01[6:10]), Rate = sapply(wtd01[6:10], mean))
rd1$Activity <- gsub("reading..viewing","reading or viewing",rd1$Activity)
rd1$Activity <- gsub("\\."," ",rd1$Activity)
rd1 <- rd1[order(rd1$Activity),]
p2 <- nPlot(Rate ~ Activity,
data = rd1,
type = 'multiBarChart')
p2$chart(color = c('brown','blue','green','#444444','#aa2288'))
#p2$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p2$set(title = "Activity breakdown")
p2$yAxis(tickFormat = "#!d3.format('%')!#")
p2$print('iframe1',include_assets = TRUE)
p2
# Activity breakdown on time of lesson
suppressPackageStartupMessages(library(rCharts))
bdat <- subset(wtd01, wtd01$lesson.time == "B", select = 6:10)
bmean <- data.frame(lesson.time = "Beginning", lapply(bdat, mean))
mdat <- subset(wtd01, wtd01$lesson.time == "M", select = 6:10)
mmean <- data.frame(lesson.time = "Middle", lapply(mdat, mean))
edat <- subset(wtd01, wtd01$lesson.time == "E", select = 6:10)
emean <- data.frame(lesson.time = "End", lapply(edat, mean))
bdat <- data.frame(lesson.time = "Beginning",
Activity = names(bmean[2:6]),
Rate = as.numeric(bmean[1,2:6])
)
mdat <- data.frame(lesson.time = "Middle",
Activity = names(mmean[2:6]),
Rate = as.numeric(mmean[1,2:6])
)
edat <- data.frame(lesson.time = "End",
Activity = names(emean[2:6]),
Rate = as.numeric(emean[1,2:6])
)
temp <- merge(bdat,mdat, all = TRUE)
lt.split.act <- merge(temp,edat, all = TRUE)
lt.split.act$Activity <- gsub("reading..viewing","reading or viewing",lt.split.act$Activity)
lt.split.act$Activity <- gsub("\\."," ",lt.split.act$Activity)
lt.split.act.plot <- nPlot(Rate ~ Activity, group = 'lesson.time',
type = 'multiBarChart',
data = lt.split.act)
#lt.split.act.plot$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
lt.split.act.plot$set(title = "Activity breakdown based on time of lesson")
lt.split.act.plot$yAxis(tickFormat = "#!d3.format('%')!#")
lt.split.act.plot$print('iframe2',include_assets = TRUE)
lt.split.act.plot
t.LI <- data.frame(date = timeSeries$date,
Measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
Measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
Measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
Measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
#p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
#p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
#p$set(title = "Timeline of understanding of learning process")
#p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
#p$yAxis(tickFormat = "#!d3.format('%')!#")
#p$chart(forceY = c(0,1))
#p$print()
# attempting with ggplot instead
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(ggthemes))
ggtime <- ggplot(t, aes(y = value, x = date, color = Measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y"))
ggtime <- ggtime + theme_tufte()
ggplotly(ggtime)
ggtime
t
ggtime
ggtime
t
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-10-31"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
wtd01 <- unique(wtd01)
wtd01$date
timeSeries$date
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
timeSeries$date
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
Measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
Measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
Measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
Measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
t
# attempting with ggplot instead
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(ggthemes))
ggtime <- ggplot(t, aes(y = value, x = date, color = Measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y"))
ggtime <- ggtime + theme_tufte()
ggplotly(ggtime)
ggtime
ggtime
# Column names must be in the following sequence
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
# Need to add new walkthrough data to All.Walkthroughs.csv before running this
wtd <- read.csv("data/All.Walkthroughs.csv")
names(wtd) <- col_names
wtd_today <- wtd[,wtd$date == max(wtd$date)]
wtd <- read.csv("data/All.Walkthroughs.csv")
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[,wtd$date == max(wtd$date)]
head(wtd)
head(wtd_today)
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
# Need to add new walkthrough data to All.Walkthroughs.csv before running this
wtd <- read.csv("data/All.Walkthroughs.csv")
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[,wtd$date == max(wtd$date)]
head(wtd_today)
head(wtd)
View(wtd)
max(wtd$date)
wtd_today <- wtd[wtd$date == max(wtd$date),]
head(wtd_today)
timeSeries <- ddply(wtd, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding),
Learning.Process = mean(learning.process))
suppressPackageStartupMessages(library(ddply))
suppressPackageStartupMessages(library(plyr))
timeSeries <- ddply(wtd, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding),
Learning.Process = mean(learning.process))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
head(timeSeries)
unique(wtd$date)
timeSeries <- ddply(wtd, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding, na.rm = T),
Success.Understanding = mean(success.understanding, na.rm = T),
Learning.Process = mean(learning.process, na.rm = T))
timeSeries
wtd <- read.csv("data/All.Walkthroughs.csv")
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),]
suppressPackageStartupMessages(library(plyr))
timeSeries <- ddply(wtd, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding, na.rm = T),
Success.Understanding = mean(success.understanding, na.rm = T),
Learning.Process = mean(learning.process, na.rm = T))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
timeSeries
# setting up library's and parameters
suppressPackageStartupMessages(library(plyr))
# Column names must be in the following sequence
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
# Need to add new walkthrough data to All.Walkthroughs.csv before running this
wtd <- read.csv("data/All.Walkthroughs.csv")
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),]
rd1 <- data.frame(Activity = names(wtd_today[6:10]), Rate = sapply(wtd_today[6:10], mean))
rd1$Activity <- gsub("reading..viewing","reading or viewing",rd1$Activity)
rd1$Activity <- gsub("\\."," ",rd1$Activity)
rd1 <- rd1[order(rd1$Activity),]
head(rd1)
?Sys.timezone
Sys.getenv("TZ")
Sys.setenv(TZ="GMT")
context <- data.frame(Observations = c("Classes visited:",
" - beginning of lesson",
" - middle of lesson", " - end of lesson",
"Students observed:",
" - Primary",
" - Secondary"),
Today = c(length(wtd_today[,1]),
sum(wtd_today$lesson.time == "B"),
sum(wtd_today$lesson.time == "M"),
sum(wtd_today$lesson.time == "E"),
sum(wtd_today$number.of.students),
sum(wtd_today$number.of.students) - sum(subset(wtd_today,
wtd_today$year.level %in% c(7,8,9,10,11,12))$number.of.students),
sum(subset(wtd_today, wtd_today$year.level %in% c(7,8,9,10,11,12))$number.of.students))
Cumulative = c(length(wtd[,1]),
context <- data.frame(Observations = c("Classes visited:",
" - beginning of lesson",
" - middle of lesson", " - end of lesson",
"Students observed:",
" - Primary",
" - Secondary"),
Today = c(length(wtd_today[,1]),
sum(wtd_today$lesson.time == "B"),
sum(wtd_today$lesson.time == "M"),
sum(wtd_today$lesson.time == "E"),
sum(wtd_today$number.of.students),
sum(wtd_today$number.of.students) - sum(subset(wtd_today,
wtd_today$year.level %in% c(7,8,9,10,11,12))$number.of.students),
sum(subset(wtd_today, wtd_today$year.level %in% c(7,8,9,10,11,12))$number.of.students))
Cumulative = c(length(wtd[,1]),
context <- data.frame(Observations = c("Classes visited:",
" - beginning of lesson",
" - middle of lesson", " - end of lesson",
"Students observed:",
" - Primary",
" - Secondary"),
Today = c(length(wtd_today[,1]),
sum(wtd_today$lesson.time == "B"),
sum(wtd_today$lesson.time == "M"),
sum(wtd_today$lesson.time == "E"),
sum(wtd_today$number.of.students),
sum(wtd_today$number.of.students) - sum(subset(wtd_today,
wtd_today$year.level %in% c(7,8,9,10,11,12))$number.of.students),
sum(subset(wtd_today, wtd_today$year.level %in% c(7,8,9,10,11,12))$number.of.students)),
Cumulative = c(length(wtd[,1]),
sum(wtd$lesson.time == "B"),
sum(wtd$lesson.time == "M"),
sum(wtd$lesson.time == "E"),
sum(wtd$number.of.students),
sum(wtd$number.of.students) - sum(subset(wtd,
wtd$year.level %in% c(7,8,9,10,11,12))$number.of.students),
sum(subset(wtd, wtd_today$year.level %in% c(7,8,9,10,11,12))$number.of.students))
)
context
?kable
rd1 <- data.frame(Activity = names(wtd_today[6:10]), Rate = sapply(wtd_today[6:10], mean))
rd1$Activity <- gsub("reading..viewing","reading or viewing",rd1$Activity)
rd1$Activity <- gsub("\\."," ",rd1$Activity)
rd1 <- rd1[order(rd1$Activity),]
rd1
# Activity breakdown on time of lesson
bdat <- subset(wtd_today, wtd_today$lesson.time == "B", select = 6:10)
bmean <- data.frame(lesson.time = "Beginning", lapply(bdat, mean))
mdat <- subset(wtd_today, wtd_today$lesson.time == "M", select = 6:10)
mmean <- data.frame(lesson.time = "Middle", lapply(mdat, mean))
edat <- subset(wtd_today, wtd_today$lesson.time == "E", select = 6:10)
emean <- data.frame(lesson.time = "End", lapply(edat, mean))
bdat <- data.frame(lesson.time = "Beginning",
Activity = names(bmean[2:6]),
Rate = as.numeric(bmean[1,2:6])
)
mdat <- data.frame(lesson.time = "Middle",
Activity = names(mmean[2:6]),
Rate = as.numeric(mmean[1,2:6])
)
edat <- data.frame(lesson.time = "End",
Activity = names(emean[2:6]),
Rate = as.numeric(emean[1,2:6])
)
temp <- merge(bdat,mdat, all = TRUE)
lt.split.act <- merge(temp,edat, all = TRUE)
lt.split.act$Activity <- gsub("reading..viewing","reading or viewing",lt.split.act$Activity)
lt.split.act$Activity <- gsub("\\."," ",lt.split.act$Activity)
lt.split.act
rd1
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
rd1
# Overall activity breakdown
rd1 <- data.frame(Activity = names(wtd_today[6:10]), Rate = sapply(wtd_today[6:10], mean))
rd1$Activity <- gsub("reading..viewing","reading or viewing",rd1$Activity)
rd1$Activity <- gsub("\\."," ",rd1$Activity)
rd1 <- rd1[order(rd1$Activity),]
rd1$Walkthrough <- "Today"
# Cumulative
rd2 <- data.frame(Activity = names(wtd[6:10]), Rate = sapply(wtd[6:10], mean))
rd2$Activity <- gsub("reading..viewing","reading or viewing",rd2$Activity)
rd2$Activity <- gsub("\\."," ",rd1$Activity)
rd2 <- rd2[order(rd2$Activity),]
rd2$Walkthrough <- "Cumulative"
rd <- rbind(rd1, rd2)
rd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate)) + geom_bar()
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate)) + geom_line()
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_line()
gbd
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar()
gbd
?geom_bar
gbd <- ggplot(data = rd, aes(x = as.Factor(Activity), y = Rate, fill = Walkthrough)) + geom_bar()
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar()
gbd
head(rd)
class(rd$Rate)
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, colour = Walkthrough)) + geom_bar()
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, colour = Walkthrough))
gbd + geom_point()
gbd + geom_bar(position = "dodge")
gbd + geom_bar()
gbd + geom_bar(stat = "identity")
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge")
gbd
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge", alpha = c(1,0.3))
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge")
gbd
gbd + theme_bw()
gbd + theme_economist()
gbd + theme_economist_white()
gbd + theme_calc()
gbd + theme_tufte()
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge") + scale_fill_brewer(palette = "Dark2")
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge") + scale_fill_brewer(palette = "Set2")
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge") + scale_fill_brewer(palette = "Set2") + scale_y_continuous(labels = scales::percent)
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge") + scale_fill_brewer(palette = "Set1") + scale_y_continuous(labels = scales::percent)
gbd
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge") + scale_fill_brewer(palette = "Pastel1") + scale_y_continuous(labels = scales::percent)
gbd
gbd + theme_tufte()
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
ggtime <- ggplot(t, aes(y = value, x = date, color = Measure)) + geom_line() + geom_point()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y")) + scale_color_brewer(palette = "Dark")
ggtime <- ggtime + theme_tufte()
ggtime
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = Measure)) + geom_line() + geom_point()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y")) + scale_color_brewer(palette = "Dark2")
ggtime <- ggtime + theme_tufte()
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = Measure)) + geom_line() + geom_point()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y")) + scale_color_brewer(palette = "Paired")
ggtime <- ggtime + theme_tufte()
ggtime
gbd <- ggplot(data = rd, aes(x = Activity, y = Rate, fill = Walkthrough)) + geom_bar(stat = "identity", position = "dodge") + scale_fill_brewer(palette = "Set3") + scale_y_continuous(labels = scales::percent)
gbd + ggthemes::theme_tufte()
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Sample Walkthrough Analysis.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Walkthrough Analysis - 2018 Term 3.pdf',
output_dir = 'reports')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date','learning.process')
wtd <- read.csv("data/All.Walkthroughs.csv") # change this to suit
wtDate <- 'August 2018' # change to suit
wtd$date <- as.Date(wtd$date)
names(wtd) <- col_names
wtd_today <- wtd[wtd$date == max(wtd$date),] # selecting latest date as today's WT
rmarkdown::render('Walkthrough - Cumulative Analysis Template.Rmd',
output_file = 'Walkthrough Analysis - 2018 Term 3.pdf',
output_dir = 'reports')
