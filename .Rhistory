p2
p2t$yAxis(tickFormat = "#!d3.format('%')!#")
p2
p2t$print('iframe1.1',include_assets = TRUE)
p2
d0 <- data.frame(suppressMessages(read_csv("Walkthrough.2016.02.10.csv")),
Date = "2016-02-10")
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(readr))
d0 <- data.frame(suppressMessages(read_csv("Walkthrough.2016.02.10.csv")),
Date = "2016-02-10")
d0 <- data.frame(suppressMessages(read_csv("data/Walkthrough.2016.02.10.csv")),
Date = "2016-02-10")
d1 <- data.frame(suppressMessages(read_csv("data/Walkthrough.2016.06.08.csv")),
Date = "2016-06-08")
d2 <- data.frame(suppressMessages(read_csv("data/Walkthrough.2016.07.28.csv")),
Date = "2016-07-28")
d3 <- data.frame(suppressMessages(read_csv("data/Walkthrough.2016.11.17.csv")),
Date = "2016-11-17")
d4 <- data.frame(suppressMessages(read_csv("data/Walkthrough.2017.02.22.csv")),
Date = "2017-02-22")
d5 <- data.frame(suppressMessages(read_csv("data/Walkthrough.2017.08.15.csv")),
Date = "2017-08-15")
d <- rbind(d0,d1)
d <- rbind(d, d2)
d <- rbind(d, d3)
d <- rbind(d, d4)
wtd01 <- d
dim(wtd01)
names(wtd01)
unique(wtd01$Date)
write.csv(wtd01, file = "data/All.Walkthroughs.csv", row.names = F)
wtd_previous <- read_csv("data/All.Walkthroughs.csv")
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous)
# setting up library's and parameters
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(readr))
op <- options(gvis.plot.tag='chart')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
new_file <- "data/Walkthrough.2017.08.15.csv"
new_date <- "2017-08-15"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = new_date)
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
names(wtd_today)
names(wtd_previous)
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
names(wtd_previous)
names(wtd_today)
# setting up library's and parameters
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(readr))
op <- options(gvis.plot.tag='chart')
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
new_file <- "data/Walkthrough.2017.08.15.csv"
new_date <- "2017-08-15"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = new_date)
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
View(wtd_previous)
View(wtd_today)
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
timeSeries$LI
timeSeries$SC
timeSeries$Learning.Understanding
timeSeries$Success.Understanding
timeSeries$date
wtd01$date
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date
as.Date.POSIXct(timeSeries$date)
wtd_previous$date
as.Date(wtd_previous$date)
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
#p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
#p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
#p$set(title = "Timeline of understanding of learning process")
#p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
#p$yAxis(tickFormat = "#!d3.format('%')!#")
#p$chart(forceY = c(0,1))
#p$print()
# attempting with ggplot instead
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(plotly))
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%mmm/%y"))
ggtime <- ggtime + theme_minimal()
ggplotly(ggtime)
t$date
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime
t
wtd01$date
new_file <- "data/Walkthrough.2017.08.15.csv"
new_date <- "2017-08-15"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
wtd01$date
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
timeSeries$date
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%mmm/%y"))
ggtime <- ggtime + theme_minimal()
ggtime
scale_x_date(name = "", labels = date_format("%m/%y"))
ggtime <- ggtime + theme_minimal()
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%m/%y"))
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1))
ggtime
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1))
#+ scale_x_date(name = "", labels = date_format("%m/%y"))
ggtime <- ggtime + theme_minimal()
ggplotly(ggtime)
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1))
+ scale_x_date(name = "", labels = date_format("%m/%y"))
ggtime
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(plotly))
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1))
+ scale_x_date(name = "", labels = date_format("%m/%y"))
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = measure))
ggtime + geom_abline()
ggtime + geom_curve()
ggtime + geom_bar()
ggtime + geom_line()
class(t$date)
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1))
+ scale_x_date(name = "", labels = date_format("%m-%Y"))
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%m-%Y"))
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%mmm-%Y"))
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%month-%Y")
)
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%B-%Y"))
ggtime <- ggtime + theme_minimal()
ggtime
ggtime <- ggplot(t, aes(y = value, x = date, color = measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y"))
ggtime <- ggtime
ggtime
library(ggthemes)
ggtime + theme_tufte()
# Column names must be in the following sequence
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
new_file <- "data/Walkthrough.2017.08.15.csv"
new_date <- "2017-08-16"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(readr))
op <- options(gvis.plot.tag='chart')
suppressPackageStartupMessages(library(readr))
op <- options(gvis.plot.tag='chart')
# Column names must be in the following sequence
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
new_file <- "data/Walkthrough.2017.08.15.csv"
new_date <- "2017-08-16"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
View(wtd_today)
summary(wtd_today)
summary(wtd_today[wtd_today$year.level == 12,])
summary(wtd_today[wtd_today$year.level == 10,])
summary(wtd_today[wtd_today$year.level == 10,c("success.understanding")])
summary(wtd_today[wtd_today$year.level == 10,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 12,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 10,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 9,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 8,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 7,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 9,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 12,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd_today[wtd_today$year.level == 12,c("LI.visible","SC.visible","learning.understanding","success.understanding")])
summary(wtd)
summary(wtd[wtd$year.level %in% c("K",1,2,3,4,5,6),])
summary(wtd[!wtd$year.level %in% c("K",1,2,3,4,5,6),])
summary(wtd_today[!wtd_today$year.level %in% c("K",1,2,3,4,5,6),])
summary(wtd_today[wtd_today$year.level %in% c("K",1,2,3,4,5,6),])
# Column names must be in the following sequence
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-08-16"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-10-31"
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(readr))
op <- options(gvis.plot.tag='chart')
# Column names must be in the following sequence
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-10-31"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
write.csv(wtd01, file = "data/All.Walkthroughs.csv")
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-10-31"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
names(wtd_today)
names(wtd_previous)
View(wtd_previous)
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-10-31"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
wtd01 <- unique(wtd01)
class(wtd01$date)
# setting up library's and parameters
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
suppressPackageStartupMessages(library(readr))
op <- options(gvis.plot.tag='chart')
# Column names must be in the following sequence
col_names <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-10-31"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
wtd01 <- unique(wtd01)
#####################
#### DO THIS!!!! ####
#####################
# must add export with unique function for All.Walkthroughs
#write.csv(wtd01, file = "data/All.Walkthroughs.csv")
suppressPackageStartupMessages(library(rCharts))
rd1 <- data.frame(Activity = names(wtd_today[6:10]), Rate = sapply(wtd_today[6:10], mean))
rd1$Activity <- gsub("reading..viewing","reading or viewing",rd1$Activity)
rd1$Activity <- gsub("\\."," ",rd1$Activity)
rd1 <- rd1[order(rd1$Activity),]
p2t <- nPlot(Rate ~ Activity,
data = rd1,
type = 'multiBarChart')
p2t$chart(color = c('brown','blue','green','#444444','#aa2288'))
#p2t$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p2t$set(title = "Activity breakdown")
p2t$yAxis(tickFormat = "#!d3.format('%')!#")
p2t$print('iframe11',include_assets = TRUE)
p2t
suppressPackageStartupMessages(library(rCharts))
bdat <- subset(wtd_today, wtd_today$lesson.time == "B", select = 6:10)
bmean <- data.frame(lesson.time = "Beginning", lapply(bdat, mean))
mdat <- subset(wtd_today, wtd_today$lesson.time == "M", select = 6:10)
mmean <- data.frame(lesson.time = "Middle", lapply(mdat, mean))
edat <- subset(wtd_today, wtd_today$lesson.time == "E", select = 6:10)
emean <- data.frame(lesson.time = "End", lapply(edat, mean))
bdat <- data.frame(lesson.time = "Beginning",
Activity = names(bmean[2:6]),
Rate = as.numeric(bmean[1,2:6])
)
mdat <- data.frame(lesson.time = "Middle",
Activity = names(mmean[2:6]),
Rate = as.numeric(mmean[1,2:6])
)
edat <- data.frame(lesson.time = "End",
Activity = names(emean[2:6]),
Rate = as.numeric(emean[1,2:6])
)
temp <- merge(bdat,mdat, all = TRUE)
lt.split.act <- merge(temp,edat, all = TRUE)
lt.split.act$Activity <- gsub("reading..viewing","reading or viewing",lt.split.act$Activity)
lt.split.act$Activity <- gsub("\\."," ",lt.split.act$Activity)
lt.split.act.plot <- nPlot(Rate ~ Activity, group = 'lesson.time',
type = 'multiBarChart',
data = lt.split.act)
#lt.split.act.plot$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
lt.split.act.plot$set(title = "Activity breakdown based on time of lesson")
lt.split.act.plot$yAxis(tickFormat = "#!d3.format('%')!#")
lt.split.act.plot$print('iframe21',include_assets = TRUE)
lt.split.act.plot
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
# Overall activity breakdown
suppressPackageStartupMessages(library(rCharts))
rd1 <- data.frame(Activity = names(wtd01[6:10]), Rate = sapply(wtd01[6:10], mean))
rd1$Activity <- gsub("reading..viewing","reading or viewing",rd1$Activity)
rd1$Activity <- gsub("\\."," ",rd1$Activity)
rd1 <- rd1[order(rd1$Activity),]
p2 <- nPlot(Rate ~ Activity,
data = rd1,
type = 'multiBarChart')
p2$chart(color = c('brown','blue','green','#444444','#aa2288'))
#p2$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p2$set(title = "Activity breakdown")
p2$yAxis(tickFormat = "#!d3.format('%')!#")
p2$print('iframe1',include_assets = TRUE)
p2
# Activity breakdown on time of lesson
suppressPackageStartupMessages(library(rCharts))
bdat <- subset(wtd01, wtd01$lesson.time == "B", select = 6:10)
bmean <- data.frame(lesson.time = "Beginning", lapply(bdat, mean))
mdat <- subset(wtd01, wtd01$lesson.time == "M", select = 6:10)
mmean <- data.frame(lesson.time = "Middle", lapply(mdat, mean))
edat <- subset(wtd01, wtd01$lesson.time == "E", select = 6:10)
emean <- data.frame(lesson.time = "End", lapply(edat, mean))
bdat <- data.frame(lesson.time = "Beginning",
Activity = names(bmean[2:6]),
Rate = as.numeric(bmean[1,2:6])
)
mdat <- data.frame(lesson.time = "Middle",
Activity = names(mmean[2:6]),
Rate = as.numeric(mmean[1,2:6])
)
edat <- data.frame(lesson.time = "End",
Activity = names(emean[2:6]),
Rate = as.numeric(emean[1,2:6])
)
temp <- merge(bdat,mdat, all = TRUE)
lt.split.act <- merge(temp,edat, all = TRUE)
lt.split.act$Activity <- gsub("reading..viewing","reading or viewing",lt.split.act$Activity)
lt.split.act$Activity <- gsub("\\."," ",lt.split.act$Activity)
lt.split.act.plot <- nPlot(Rate ~ Activity, group = 'lesson.time',
type = 'multiBarChart',
data = lt.split.act)
#lt.split.act.plot$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
lt.split.act.plot$set(title = "Activity breakdown based on time of lesson")
lt.split.act.plot$yAxis(tickFormat = "#!d3.format('%')!#")
lt.split.act.plot$print('iframe2',include_assets = TRUE)
lt.split.act.plot
t.LI <- data.frame(date = timeSeries$date,
Measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
Measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
Measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
Measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
#p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
#p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
#p$set(title = "Timeline of understanding of learning process")
#p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
#p$yAxis(tickFormat = "#!d3.format('%')!#")
#p$chart(forceY = c(0,1))
#p$print()
# attempting with ggplot instead
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(ggthemes))
ggtime <- ggplot(t, aes(y = value, x = date, color = Measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y"))
ggtime <- ggtime + theme_tufte()
ggplotly(ggtime)
ggtime
t
ggtime
ggtime
t
new_file <- "data/Walkthrough.2017.10.31.csv"
new_date <- "2017-10-31"
wtd_today <- data.frame(suppressMessages(read_csv(new_file)), date = as.Date(new_date))
names(wtd_today) <- col_names
wtd_previous <- read.csv("data/All.Walkthroughs.csv")
names(wtd_previous) <- col_names
# merging data
wtd01 <- rbind(wtd_today, wtd_previous)
wtd01 <- unique(wtd01)
wtd01$date
timeSeries$date
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
timeSeries$date
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
Measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
Measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
Measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
Measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
t
# attempting with ggplot instead
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(scales))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(ggthemes))
ggtime <- ggplot(t, aes(y = value, x = date, color = Measure)) + geom_line()
ggtime <- ggtime + scale_y_continuous(name = "",labels = percent, limits = c(0,1)) + scale_x_date(name = "", labels = date_format("%b-%y"))
ggtime <- ggtime + theme_tufte()
ggplotly(ggtime)
ggtime
ggtime
