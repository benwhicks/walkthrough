value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p$set(title = "Progress in understanding of learning process")
p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b')(new Date(d*1000*3600*24));} !#" )
p$yAxis(tickFormat = "#!d3.format('%')!#")
p$chart(forceY = c(0,1))
p$print('iframe3',include_assets = TRUE)
p
p$html()
library(highcharter)
hchart(t, "line", x = date, y = value, group = measure)
highchart(data = t, type = "line", x = date, y = value)
?hchart
hchart(t, "scatter", x = date, y = value, group = measure)
h <- highchart()
h <- h %>% hc_xAxis(categories = t$date)
h <- h %>% hc_add_series(name = "LI", data = t$value)
h
h <- highchart %>% hc_xAxis(t$date)
h <- highchart %>% hc_xAxis(categories = t$date)
h <- highchart() %>% hc_xAxis(t$date)
h
h %>% hc_add_series(t[,measure == "LI"]$value)
h %>% hc_add_series(t[measure == "LI",]$value)
h %>% hc_add_series(t[t$measure == "LI",]$value)
h
h %>% hc_add_series(t[,t$measure == "LI"]$value)
h
data("citytemp")
citytemp$month
citytemp$tokyo
timeSeries$LI
h <- highchart() %>% hc_xAxis(timeSeries$date)
h %>% hc_add_series(timeSeries$LI)
h
h <- h %>% hc_add_series(timeSeries$LI)
h
h <- highchart() %>% hc_xAxis(categories = timeSeries$date)
h
h <- h %>% hc_add_series(LI = timeSeries$LI)
h
h <- h %>% hc_add_series(data = timeSeries$LI)
h
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
hc
uspexp = reshape2::melt(USPersonalExpenditure)
names(uspexp)[1:2] = c('Category', 'Year')
p3 <- xCharts$new()
p3$layer(value ~ Year, group = 'Category', data = uspexp)
p3$set(xScale = 'linear', yScale = 'linear', type = 'line-dotted', xMin = 1935)
p3
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
h <- hPlot(value ~ date, data = t, type = "line", group = 'measure')
h
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
h <- hPlot(value ~ date, data = t, type = "line", group = 'measure')
h$xAxis(type = 'datetime', labels = list(format = '{value:%b}'))
h
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
h <- hPlot(value ~ date, data = t, type = "line", group = 'measure')
h$xAxis(type = 'datetime', labels = list(format = '{value:%Y-%b}'))
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
h <- hPlot(value ~ date, data = t, type = "line", group = 'measure')
h$xAxis(type = 'datetime', labels = list(format = '{value:%Y-%b}'))
h
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
hdat <- t
t$date <- 1000*3600*24*t$date
h <- hPlot(value ~ date, data = t, type = "line", group = 'measure')
h$xAxis(type = 'datetime', labels = list(format = '{value:%Y-%b}'))
h
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
hdat <- transform(t, date = as.numeric(as.POSIXct(date)*1000))
h <- hPlot(value ~ date, data = t, type = "line", group = 'measure')
h$xAxis(type = 'datetime', labels = list(format = '{value:%Y-%b}'))
h
hc <- highchart() %>%
hc_xAxis(timeSeries$date) %>%
hc_add_series(name = "LI Visible", data = timeSeries$LI)
hdat <- transform(t, date = as.numeric(as.POSIXct(date)*1000*3600))
h <- hPlot(value ~ date, data = t, type = "line", group = 'measure')
h$xAxis(type = 'datetime', labels = list(format = '{value:%Y-%b}'))
h
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p$set(title = "Progress in understanding of learning process")
p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
p$yAxis(tickFormat = "#!d3.format('%')!#")
p$chart(forceY = c(0,1))
p$print()
p
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p$set(title = "Progress in understanding of learning process")
p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
p$yAxis(tickFormat = "#!d3.format('%')!#")
p$chart(forceY = c(0,1))
p$xAxis(type = 'datetime')
p$print()
p
p$html_assets$js
p$html_assets$css
p$html()
t$date
t$date
class(t$date)
as.character(t$date)
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
p <- nPlot(value ~ as.character(date), data = t, type = "lineChart", group = "measure")
p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p$set(title = "Timeline of understanding of learning process")
p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
p$yAxis(tickFormat = "#!d3.format('%')!#")
p$chart(forceY = c(0,1))
p$print()
p
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p$set(title = "Timeline of understanding of learning process")
p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
p$yAxis(tickFormat = "#!d3.format('%')!#")
p$chart(useInteractiveGuidelines = TRUE)
p$chart(forceY = c(0,1))
p$print()
p
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p$set(title = "Timeline of understanding of learning process")
p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
p$yAxis(tickFormat = "#!d3.format('%')!#")
p$chart(useInteractiveGuidelines = TRUE)
p$chart(forceY = c(0,1))
p$print()
p
# transforming data for charting
t.LI <- data.frame(date = timeSeries$date,
measure = "LI Visible",
value = timeSeries$LI)
t.SC <- data.frame(date = timeSeries$date,
measure = "SC Visible",
value = timeSeries$SC)
t.LU <- data.frame(date = timeSeries$date,
measure = "Learning Understood",
value = timeSeries$Learning.Understanding/2)
t.SU <- data.frame(date = timeSeries$date,
measure = "Success Understood",
value = timeSeries$Success.Understanding/2)
t1 <- rbind(t.LI, t.SC)
t2 <- rbind(t.LU, t.SU)
t <- rbind(t1, t2)
p <- nPlot(value ~ date, data = t, type = "lineChart", group = "measure")
p$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
p$set(title = "Timeline of understanding of learning process")
p$xAxis( tickFormat="#! function(d) {return d3.time.format('%b %d')(new Date(d*1000*3600*24));} !#" )
p$yAxis(tickFormat = "#!d3.format('%')!#")
p$chart(forceY = c(0,1))
p$print()
p
# setting up library's and parameters
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
op <- options(gvis.plot.tag='chart')
# reading in data, renaming columns
d0 <- data.frame(read.csv("Walkthrough.2016.02.10.csv"),
Date = "2016-02-10")
d1 <- data.frame(read.csv("Walkthrough.2016.06.08.csv"),
Date = "2016-06-08")
d2 <- data.frame(read.csv("Walkthrough.2016.07.28.csv"),
Date = "2016-07-28")
# merging data
d <- rbind(d0,d1)
d <- rbind(d,d2)
wtd01 <- d
names(wtd01) <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
timeSeries <- ddply(wtd01, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
View(wtd)
# setting up library's and parameters
suppressPackageStartupMessages(library(googleVis))
suppressPackageStartupMessages(library(plyr))
op <- options(gvis.plot.tag='chart')
# reading in data, renaming columns
d0 <- data.frame(read.csv("Walkthrough.2016.02.10.csv"),
Date = "2016-02-10")
d1 <- data.frame(read.csv("Walkthrough.2016.06.08.csv"),
Date = "2016-06-08")
d2 <- data.frame(read.csv("Walkthrough.2016.07.28.csv"),
Date = "2016-07-28")
# merging data
d <- rbind(d0,d1)
d <- rbind(d,d2)
wtd <- d
names(wtd) <- c('period','room','year.level','number.of.students','lesson.time','direct.instruction','discussing','reading..viewing','groupwork','independent.work','LI.visible','SC.visible','learning.understanding','success.understanding','date')
timeSeries <- ddply(wtd, ~date, summarise,
LI = mean(LI.visible),
SC = mean(SC.visible),
Learning.Understanding = mean(learning.understanding),
Success.Understanding = mean(success.understanding))
timeSeries$date <- as.Date(timeSeries$date, "%Y-%m-%d")
View(wtd)
mean(wtd$LI.visible)
mean(wtd$SC.visible)
round(100*mean(wtd$LI.visible))
mean(wtd$learning.understanding)
mean(wtd$learning.understanding)/2
library(ggplot2)
ggplot(data = wtd, aes(wtd$learning.understanding)) + geom_histogram()
ggplot(data = wtd, aes(wtd$discussion)) + geom_histogram()
wtd$discussing
act.dat <- data.frame(DirectInstruction = sum(wtd$direct.instruction),Discussing = sum(wtd$discussing), ReadingViewing = sum(wtd$reading..viewing), GroupWork = sum(wtd$groupwork), IndependentWork = sum(wtd$independent.work))
library(ggplot2)
act.dat <- data.frame(
Activity = c("Direct Instruction", "Discussion", "Reading / Viewing", "Group Work", "Independent Work"),
Frequency = c(sum(wtd$direct.instruction),
sum(wtd$discussing),
sum(wtd$reading..viewing),
sum(wtd$groupwork),
sum(wtd$independent.work))
)
act.dat
ggplot(act.dat, aes(x = Activity, y = Frequency)) + geom_bar()
ggplot(act.dat, aes(x = Activity, y = act.dat$Frequency)) + geom_bar()
ggplot(act.dat, aes(x = Activity, y = act.dat$Frequency)) + geom_histogram()
ggplot(act.dat, aes(x = Activity)) + geom_histogram()
?geom_histogram
ggplot(act.dat, aes(x = Activity, y = Frequency)) + geom_bar(stat = "Identity")
?rcorr
correlation
?corr
?correlation
?cor
cor(wtd$LI.visible, wtd$learning.understanding)
cor(wtd$SC.visible, wtd$success.understanding)
cor(wtd$period, wtd$success.understanding)
wtd[wtd$year.level %in% c(11,12),]
stage6 <- wtd[wtd$year.level %in% c(11,12),]
stage5 <- wtd[wtd$year.level %in% c(9,10),]
stage4 <- wtd[wtd$year.level %in% c(7,8),]
stage3 <- wtd[wtd$year.level %in% c(5,6),]
stage2 <- wtd[wtd$year.level %in% c(3,4),]
stage1 <- wtd[wtd$year.level %in% c(0,1, "K"),]
cor(stage6$LI.visible,stage6$learning.understanding)
cor(stage6$learning.understanding, stage6$LI.visible)
cor(stage4$LI.visible, stage4$learning.understanding),
stage6 <- wtd[wtd$year.level %in% c(11,12),]
stage5 <- wtd[wtd$year.level %in% c(9,10),]
stage4 <- wtd[wtd$year.level %in% c(7,8),]
stage3 <- wtd[wtd$year.level %in% c(5,6),]
stage2 <- wtd[wtd$year.level %in% c(3,4),]
stage1 <- wtd[wtd$year.level %in% c(0,1, "K"),]
inf.vect = c(cor(stage4$LI.visible, stage4$learning.understanding),
cor(stage5$LI.visible, stage5$learning.understanding),
cor(stage6$LI.visible, stage6$learning.understanding),
cor(stage4$SC.visible, stage4$success.understanding),
cor(stage5$SC.visible, stage5$success.understanding),
cor(stage6$SC.visible, stage6$success.understanding)
)
# not doing primary as not enough data yet
LISCinfluence <- data.frame(Stage = rep(c(4,5,6),2),
Visible = c(rep("Learning",3),rep("Success",3)),
Influence = inf.vect
)
inf.vect
cor(stage4$learning.understanding, stage4$discussing)
cor(stage4$learning.understanding, stage4$direct.instruction)
cor(stage4$learning.understanding, stage4$groupwork)
cor(stage4$learning.understanding, stage4$independent.work)
lm.fit(stage4$learning.understanding ~ stage4$LI.visible)
?lm.fit
fit <- lm.fit(learning.understanding ~ LI.visible, data = stage4)
lm.fit(learning.understanding ~ LI.visible, data = stage4)
lm.fit(data = wtd,learning.understanding ~ LI.visible)
lm.fit(data = wtd,learning.understanding ~ wtd$lesson.time)
lm.fit(data = wtd,learning.understanding ~ wtd$LI.visible)
lm.fit(data = wtd,wtd$learning.understanding ~ wtd$LI.visible)
library(randomForest)
rf <- randomForest(wtd, learning.understanding ~ .)
?randomForest
rf <- randomForest(learning.understanding ~ ., data = wtd)
summary(rf)
varImpPlot(rf)
library(randomForest)
library(randomForest)
wtd.adj <- dplyr::mutate(wtd, Understanding = sum(wtd$learning.understanding,wtd$success.understanding))
stage6 <- wtd[wtd$year.level %in% c(11,12),]
stage5 <- wtd[wtd$year.level %in% c(9,10),]
stage4 <- wtd[wtd$year.level %in% c(7,8),]
stage3 <- wtd[wtd$year.level %in% c(5,6),]
stage2 <- wtd[wtd$year.level %in% c(3,4),]
stage1 <- wtd[wtd$year.level %in% c(0,1, "K"),]
inf.vect = c(cor(stage4$LI.visible, stage4$learning.understanding),
cor(stage5$LI.visible, stage5$learning.understanding),
cor(stage6$LI.visible, stage6$learning.understanding),
cor(stage4$SC.visible, stage4$success.understanding),
cor(stage5$SC.visible, stage5$success.understanding),
cor(stage6$SC.visible, stage6$success.understanding)
)
# not doing primary as not enough data yet
LISCinfluence <- data.frame(Stage = rep(c(4,5,6),2),
Visible = c(rep("Learning",3),rep("Success",3)),
Influence = inf.vect)
# Random forest method
wtd.adj
library(randomForest)
wtd.adj <- dplyr::mutate(wtd, Understanding = wtd$learning.understanding + wtd$success.understanding)
stage6 <- wtd[wtd$year.level %in% c(11,12),]
stage5 <- wtd[wtd$year.level %in% c(9,10),]
stage4 <- wtd[wtd$year.level %in% c(7,8),]
stage3 <- wtd[wtd$year.level %in% c(5,6),]
stage2 <- wtd[wtd$year.level %in% c(3,4),]
stage1 <- wtd[wtd$year.level %in% c(0,1, "K"),]
inf.vect = c(cor(stage4$LI.visible, stage4$learning.understanding),
cor(stage5$LI.visible, stage5$learning.understanding),
cor(stage6$LI.visible, stage6$learning.understanding),
cor(stage4$SC.visible, stage4$success.understanding),
cor(stage5$SC.visible, stage5$success.understanding),
cor(stage6$SC.visible, stage6$success.understanding)
)
# not doing primary as not enough data yet
LISCinfluence <- data.frame(Stage = rep(c(4,5,6),2),
Visible = c(rep("Learning",3),rep("Success",3)),
Influence = inf.vect)
# Random forest method
wtd.adj
?mutate
?subset
names(wtd.adj)
library(randomForest)
wtd.adj <- dplyr::mutate(wtd, Understanding = wtd$learning.understanding + wtd$success.understanding)
wtd.adj <- subset(wtd.adj, select = c(period,room,year.level,number.of.students,lesson.time,direct.instruction,discussing, reading..viewing, groupwork, independent.work, LI.visible, SC.visible, date, Understanding))
stage6 <- wtd[wtd$year.level %in% c(11,12),]
stage5 <- wtd[wtd$year.level %in% c(9,10),]
stage4 <- wtd[wtd$year.level %in% c(7,8),]
stage3 <- wtd[wtd$year.level %in% c(5,6),]
stage2 <- wtd[wtd$year.level %in% c(3,4),]
stage1 <- wtd[wtd$year.level %in% c(0,1, "K"),]
inf.vect = c(cor(stage4$LI.visible, stage4$learning.understanding),
cor(stage5$LI.visible, stage5$learning.understanding),
cor(stage6$LI.visible, stage6$learning.understanding),
cor(stage4$SC.visible, stage4$success.understanding),
cor(stage5$SC.visible, stage5$success.understanding),
cor(stage6$SC.visible, stage6$success.understanding)
)
# not doing primary as not enough data yet
LISCinfluence <- data.frame(Stage = rep(c(4,5,6),2),
Visible = c(rep("Learning",3),rep("Success",3)),
Influence = inf.vect)
# Random forest method
View(wtd.adj)
rf <- randomForest(wtd.adj, Understanding ~ .)
?randomForest
rf <- randomForest(Understanding ~ ., data = wtd.adj)
varImpPlot(rf)
cor(wtd.adj$Understanding, wtd.adj$number.of.students)
lm.fit(Understanding ~ ., data = wtd.adj)
?lm.fit
fit <- lm(Understanding ~ LI.visible, data = wtd.adj)
fit
summary(fit)
plot(fit)
fit2 <- lm(Understanding ~ ., data = wtd.adj)
summary(fit2)
plot(fit2)
influence_all <- randomForest(Understanding ~ ., data = wtd.adj)
plot(influence_all)
varImpPlot(influence_all)
library(randomForest)
wtd.adj <- dplyr::mutate(wtd, Understanding = wtd$learning.understanding + wtd$success.understanding)
wtd.adj <- subset(wtd.adj, select = c(period,room,year.level,number.of.students,lesson.time,direct.instruction,discussing, reading..viewing, groupwork, independent.work, LI.visible, SC.visible, date, Understanding))
stage6 <- wtd.adj[wtd.adj$year.level %in% c(11,12),]
stage5 <- wtd.adj[wtd.adj$year.level %in% c(9,10),]
stage4 <- wtd.adj[wtd.adj$year.level %in% c(7,8),]
stage3 <- wtd.adj[wtd.adj$year.level %in% c(5,6),]
stage2 <- wtd.adj[wtd.adj$year.level %in% c(3,4),]
stage1 <- wtd.adj[wtd.adj$year.level %in% c(0,1, "K"),]
inf.vect = c(cor(stage4$LI.visible, stage4$learning.understanding),
cor(stage5$LI.visible, stage5$learning.understanding),
cor(stage6$LI.visible, stage6$learning.understanding),
cor(stage4$SC.visible, stage4$success.understanding),
cor(stage5$SC.visible, stage5$success.understanding),
cor(stage6$SC.visible, stage6$success.understanding)
)
# not doing primary as not enough data yet
LISCinfluence <- data.frame(Stage = rep(c(4,5,6),2),
Visible = c(rep("Learning",3),rep("Success",3)),
Influence = inf.vect)
# Random forest method
set.seed(1234)
influence_all <- randomForest(Understanding ~ ., data = wtd.adj)
varImpPlot(influence_all)
influence_stage4 <- randomForest(Understanding ~ ., data = stage4)
varImpPlot(influence_stage4)
influence_stage5 <- randomForest(Understanding ~ ., data = stage5)
varImpPlot(influence_stage5)
influence_stage6 <- randomForest(Understanding ~ ., data = stage6)
varImpPlot(influence_stage6)
fit <- lm(Understanding ~ LI.visible + SC.visible + discussion, data = wtd.adj)
fit <- lm(Understanding ~ LI.visible + SC.visible + discussing, data = wtd.adj)
fit
summary(fit)
anova(fit)
influence(fit)
